window.jest_html_reporters_callback__({"numFailedTestSuites":2,"numFailedTests":2,"numPassedTestSuites":2,"numPassedTests":23,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":4,"numTotalTests":25,"startTime":1727519804687,"success":false,"testResults":[{"numFailingTests":1,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1727519812242,"runtime":6300,"slow":true,"start":1727519805942},"testFilePath":"F:\\api-automation-dilpreet-udamey\\specs\\poc.spec.ts","failureMessage":"  ● POC Tests › POST Request › POST /posts\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"Naruto, One Piece, Hunter X Hunter\"\n    Received: \"My Fav animes\"\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m             \u001b[36mconst\u001b[39m res \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpost(\u001b[32m'/posts'\u001b[39m)\u001b[33m.\u001b[39msend(data)\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m             expect(res\u001b[33m.\u001b[39mstatusCode)\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m             expect(res\u001b[33m.\u001b[39mbody\u001b[33m.\u001b[39mtitle)\u001b[33m.\u001b[39mtoBe(data\u001b[33m.\u001b[39mbody)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m\u001b[0m\n\n      at specs/poc.spec.ts:30:36\n      at fulfilled (specs/poc.spec.ts:5:58)\n","testResults":[{"ancestorTitles":["POC Tests","GET Requests"],"duration":483,"failureMessages":[],"fullName":"POC Tests GET Requests GET /posts","status":"passed","title":"GET /posts"},{"ancestorTitles":["POC Tests","GET Requests"],"duration":431,"failureMessages":[],"fullName":"POC Tests GET Requests GET /comments with query params","status":"passed","title":"GET /comments with query params"},{"ancestorTitles":["POC Tests","POST Request"],"duration":666,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"Naruto, One Piece, Hunter X Hunter\"\nReceived: \"My Fav animes\"\n    at F:\\api-automation-dilpreet-udamey\\specs\\poc.spec.ts:30:36\n    at Generator.next (<anonymous>)\n    at fulfilled (F:\\api-automation-dilpreet-udamey\\specs\\poc.spec.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"POC Tests POST Request POST /posts","status":"failed","title":"POST /posts"},{"ancestorTitles":["POC Tests","PUT Request"],"duration":1104,"failureMessages":[],"fullName":"POC Tests PUT Request PUT /posts/{id}","status":"passed","title":"PUT /posts/{id}"},{"ancestorTitles":["POC Tests","PATCH Request"],"duration":940,"failureMessages":[],"fullName":"POC Tests PATCH Request PATCH /posts/{id}","status":"passed","title":"PATCH /posts/{id}"},{"ancestorTitles":["POC Tests","DELETE Requests"],"duration":518,"failureMessages":[],"fullName":"POC Tests DELETE Requests DELETE /posts/{id}","status":"passed","title":"DELETE /posts/{id}"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1727519812694,"runtime":6752,"slow":true,"start":1727519805942},"testFilePath":"F:\\api-automation-dilpreet-udamey\\specs\\upload.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Upload File"],"duration":2545,"failureMessages":[],"fullName":"Upload File POST /upload/single","status":"passed","title":"POST /upload/single"},{"ancestorTitles":["Upload File"],"duration":2056,"failureMessages":[],"fullName":"Upload File POST /upload/multiple","status":"passed","title":"POST /upload/multiple"}]},{"numFailingTests":1,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1727519819858,"runtime":13916,"slow":true,"start":1727519805942},"testFilePath":"F:\\api-automation-dilpreet-udamey\\specs\\categories.spec.ts","failureMessage":"  ● Categories › Update Categories › PUT /categories/id\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 422\n\n    \u001b[0m \u001b[90m 44 |\u001b[39m             \u001b[36mconst\u001b[39m res \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m categoriesController\u001b[33m.\u001b[39mputCategories(categoryId\u001b[33m,\u001b[39m body )\n     \u001b[90m 45 |\u001b[39m             \u001b[33m.\u001b[39m\u001b[36mset\u001b[39m(\u001b[32m\"Authorization\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"Bearer \"\u001b[39m \u001b[33m+\u001b[39m token)\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 46 |\u001b[39m             expect(res\u001b[33m.\u001b[39mstatusCode)\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 47 |\u001b[39m             expect(res\u001b[33m.\u001b[39mbody\u001b[33m.\u001b[39mname)\u001b[33m.\u001b[39mtoBe(body\u001b[33m.\u001b[39mname)\u001b[33m;\u001b[39m\n     \u001b[90m 48 |\u001b[39m             \n     \u001b[90m 49 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\n      at specs/categories.spec.ts:46:36\n      at fulfilled (specs/categories.spec.ts:5:58)\n","testResults":[{"ancestorTitles":["Categories"],"duration":2957,"failureMessages":[],"fullName":"Categories Get/ categories","status":"passed","title":"Get/ categories"},{"ancestorTitles":["Categories","Create Categories"],"duration":1108,"failureMessages":[],"fullName":"Categories Create Categories POST /categories","status":"passed","title":"POST /categories"},{"ancestorTitles":["Categories","Update Categories"],"duration":1010,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 422\n    at F:\\api-automation-dilpreet-udamey\\specs\\categories.spec.ts:46:36\n    at Generator.next (<anonymous>)\n    at fulfilled (F:\\api-automation-dilpreet-udamey\\specs\\categories.spec.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Categories Update Categories PUT /categories/id","status":"failed","title":"PUT /categories/id"},{"ancestorTitles":["Categories","Delete Categories"],"duration":1121,"failureMessages":[],"fullName":"Categories Delete Categories Delete /categories","status":"passed","title":"Delete /categories"}]},{"numFailingTests":0,"numPassingTests":13,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1727519829706,"runtime":23763,"slow":true,"start":1727519805943},"testFilePath":"F:\\api-automation-dilpreet-udamey\\specs\\brands.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":[" Brands","Fetch /brands"],"duration":3325,"failureMessages":[],"fullName":" Brands Fetch /brands GET /brands","status":"passed","title":"GET /brands"},{"ancestorTitles":[" Brands","Create brands"],"duration":2,"failureMessages":[],"fullName":" Brands Create brands POST /brands","status":"passed","title":"POST /brands"},{"ancestorTitles":[" Brands","Create brands"],"duration":900,"failureMessages":[],"fullName":" Brands Create brands Schema Verification - Name is a mandatory filed","status":"passed","title":"Schema Verification - Name is a mandatory filed"},{"ancestorTitles":[" Brands","Create brands"],"duration":905,"failureMessages":[],"fullName":" Brands Create brands Schema Verification - Min char length for name > 1","status":"passed","title":"Schema Verification - Min char length for name > 1"},{"ancestorTitles":[" Brands","Create brands"],"duration":988,"failureMessages":[],"fullName":" Brands Create brands Schema Verification - Max length for name = 30","status":"passed","title":"Schema Verification - Max length for name = 30"},{"ancestorTitles":[" Brands","Create brands"],"duration":901,"failureMessages":[],"fullName":" Brands Create brands Schema Verification - Description must be String","status":"passed","title":"Schema Verification - Description must be String"},{"ancestorTitles":[" Brands","Create brands"],"duration":997,"failureMessages":[],"fullName":" Brands Create brands Business Logic - Duplicate Band entries are not allowed","status":"passed","title":"Business Logic - Duplicate Band entries are not allowed"},{"ancestorTitles":[" Brands","Fetch individual Brand","GET /brand/:id"],"duration":981,"failureMessages":[],"fullName":" Brands Fetch individual Brand GET /brand/:id Businees Login - GET /brand/invalid_id should throw 404","status":"passed","title":"Businees Login - GET /brand/invalid_id should throw 404"},{"ancestorTitles":[" Brands","Fetch individual Brand","GET /brand/:id"],"duration":1028,"failureMessages":[],"fullName":" Brands Fetch individual Brand GET /brand/:id GET /brand/:id","status":"passed","title":"GET /brand/:id"},{"ancestorTitles":[" Brands","Update brands"],"duration":1093,"failureMessages":[],"fullName":" Brands Update brands PUT /brands","status":"passed","title":"PUT /brands"},{"ancestorTitles":[" Brands","Update brands"],"duration":1007,"failureMessages":[],"fullName":" Brands Update brands PUT /brands/invalid_id","status":"passed","title":"PUT /brands/invalid_id"},{"ancestorTitles":[" Brands","Delete brands"],"duration":1204,"failureMessages":[],"fullName":" Brands Delete brands DELETE /brands","status":"passed","title":"DELETE /brands"},{"ancestorTitles":[" Brands","Delete brands"],"duration":916,"failureMessages":[],"fullName":" Brands Delete brands DELETE /brands/invalid_id","status":"passed","title":"DELETE /brands/invalid_id"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":[],"coverageDirectory":"F:\\api-automation-dilpreet-udamey\\coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":11,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["F:\\api-automation-dilpreet-udamey\\node_modules\\jest-junit\\index.js",{"outputDirectory":"reports"}],["F:\\api-automation-dilpreet-udamey\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"reports"}]],"rootDir":"F:\\api-automation-dilpreet-udamey","runTestsByPath":false,"seed":1929801534,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"F:\\api-automation-dilpreet-udamey\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1727519829767,"_reporterOptions":{"publicPath":"reports","filename":"jest_html_reporters.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})